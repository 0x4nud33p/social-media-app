// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  password  String
  username  String    @unique
  profile   Profile?
  posts     Post[]
  comments  Comment[]
  likes     Post[]
  followers Follow[] @relation("Followers")
  following Follow[] @relation("Following")
  notifications Notification[]
}

model Profile {
  id       Int     @id @default(autoincrement())
  fullName String
  bio      String?
  avatar   String?
  user     User     @relation(fields: [userId], references: [id])
  userId   Int      @unique
}

model Post {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  title        String?   @db.VarChar(255)
  content      String?
  published    Boolean   @default(false)
  likeCount    Int       @default(0)
  commentCount Int       @default(0)
  author       User      @relation(fields: [authorId], references: [id])
  authorId     Int
  likedBy      User[]    @relation("LikedPosts")
  comments     Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}

model Follow {
  id          Int  @id @default(autoincrement())
  follower    User @relation("Followers", fields: [followerId], references: [id])
  followerId  Int
  following   User @relation("Following", fields: [followingId], references: [id])
  followingId Int
  @@unique([followerId, followingId])
}

model Notification {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  type      String
  message   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}
